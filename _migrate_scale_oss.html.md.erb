Ensure you have enough VMs allocated to support the newly-migrated apps. 

You can scale your VMs by editing your Cloud Foundry and Diego manifests and redeploying. After performing your migration to Diego, you can [scale](#redeploy) the DEA component VMs down, unless you want to give your users the option of using either the Diego or DEA architectures.

1. Edit your Diego manifest to configure the following four VMs with one instance per Availability Zone (AZ), or two if you are using only a single AZ. Locate the following component configurations under `jobs` in your Diego manifest and edit the `instances` property:

    ```
    jobs:
      - name: brain_ZONE-NUMBER
        instances: INSTANCE-NUMBER
     [...]
      - name: cc_bridge_ZONE-NUMBER
        instances: INSTANCE-NUMBER
     [...]
      - name: route_emitter_ZONE-NUMBER
        instances: INSTANCE-NUMBER
     [...]
      - name: access_ZONE-NUMBER
          instances: INSTANCE-NUMBER
     ```

1. Edit your Diego manifest to configure the Diego Cell VM for the capacity your apps require. The Diego Cell VM has a similar responsibility to the DEA VM to run applications. For example, if you have allocated three DEA instances with 32 GB of persistent disk and 32 GB of RAM for each, allocate three Diego Cell instances with 32 GB of persistent disk and 32 GB of RAM for each to have similar capacity on Diego as with DEAs. Locate the following component configurations under `resource_pools` in your Diego manifest and edit the `instance_type` property:

    ```
    resource_pools:
      - name: cell_ZONE-NUMBER
        cloud_properties: 
          instance_type: YOUR-IAAS-INSTANCE-TYPE
    ```

    Your instance type varies by IaaS. Choose an instance type that corresponds to the persistent disk and RAM requirements of your configuration. For instance, if your deployment uses Amazon Web Services (AWS), this instance type could be `r3.xlarge`. 
    <br/><br/>
    If you do not believe your deployment will utilize all of the available resources, you can set resource limits by locating the following component configurations under `properties` in your Diego manifest and replacing `default` with a specific value. If you do not specify values, Cloud Foundry matches the setting to the size of the VM you choose above. 

    ```
    properties:
      - diego.executor.memory_capacity_mb:
        default: YOUR-CAPACITY-HERE
      - diego.executor.disk_capacity_mb:
        default: YOUR-CAPACITY-HERE
    ```

1. Edit your Diego manifest to ensure that you have at least one Database VM instance in each AZ and that the total number of instances is also an odd number. If your total number of AZs is even, you may need to allocate one more instance to ensure the total number of instances is odd. For example, if you have four AZs, allocate a total of five instances for your Database VMs. You must have an odd number of instances to maintain quorum.
<br/><br/>
Locate the following component configuration under `jobs` in your Diego manifest and edit the `instances` property:

    ```
    jobs:
      - name: database_ZONE-NUMBER
        instances: INSTANCE-NUMBER
    ```

1. Edit your Cloud Foundry manifest to ensure that you have at least one Consul VM instance in each AZ and that the total number of instances is also an odd number, as above. Locate the following component configuration under `jobs` in your Cloud Foundry manifest and edit the `instances` property:

    ```
    jobs:
      - name: consul_ZONE-NUMBER
          instances: INSTANCE-NUMBER
    ```